plugins {
    id 'java'
    id 'io.qameta.allure' version '2.12.0'
}

group = 'org.example'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    implementation("com.codeborne:selenide:7.7.3")
    implementation("com.github.javafaker:javafaker:1.0.2")
    implementation("io.qameta.allure:allure-selenide:2.28.1")
    implementation("io.qameta.allure:allure-rest-assured:2.28.1")
    implementation("io.rest-assured:rest-assured:5.4.0")
    implementation("com.fasterxml.jackson.core:jackson-databind:2.19.0")
    implementation("org.slf4j:slf4j-api:2.0.17")
    implementation("ch.qos.logback:logback-classic:1.5.16")
    implementation("io.rest-assured:json-schema-validator:5.4.0")
    implementation("org.postgresql:postgresql:42.7.3")

    testImplementation("org.junit.platform:junit-platform-launcher:1.12.2")
    testImplementation("org.junit.jupiter:junit-jupiter-api:5.12.2")
    testImplementation("org.junit.jupiter:junit-jupiter-engine:5.12.2")
    testImplementation("io.qameta.allure:allure-junit5:2.28.1")
    testImplementation("io.cucumber:cucumber-java:7.20.1")

    compileOnly("org.projectlombok:lombok:1.18.36")
    annotationProcessor("org.projectlombok:lombok:1.18.36")

    runtimeOnly("org.aspectj:aspectjweaver:1.9.19")
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.withType(Test) {
    maxParallelForks = 1
}

tasks.register('testApi', Test) {
    useJUnitPlatform {
        includeTags 'API'
    }
    systemProperties(System.getProperties())
}

tasks.register('testUi', Test) {
    useJUnitPlatform {
        includeTags 'UI'
    }
    systemProperties(System.getProperties())
}

test {
    systemProperties(System.getProperties())
    useJUnitPlatform()
}
